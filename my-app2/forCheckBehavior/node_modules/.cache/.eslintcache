[{"/mnt/c/apln/git-local/React/my-app/src/index.js":"1","/mnt/c/apln/git-local/React/my-app/src/reportWebVitals.js":"2","/mnt/c/apln/git-local/React/my-app/src/App.js":"3","/mnt/c/apln/git-local/React/my-app/src/myfiles/Janken.js":"4","/mnt/c/apln/git-local/React/my-app/src/myfiles/tutorial.js":"5","/mnt/c/apln/git-local/React/my-app/src/myfiles/top.js":"6","/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/index.js":"7","/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/myfile/tick.jsx":"8","/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/myfile/yourStatus.jsx":"9"},{"size":500,"mtime":1649131552183,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1648195536881,"results":"12","hashOfConfig":"11"},{"size":1032,"mtime":1649131518986,"results":"13","hashOfConfig":"11"},{"size":3781,"mtime":1648457206153,"results":"14","hashOfConfig":"11"},{"size":3611,"mtime":1649061068002,"results":"15","hashOfConfig":"11"},{"size":675,"mtime":1649129025299,"results":"16","hashOfConfig":"11"},{"size":599,"mtime":1649310521881,"results":"17","hashOfConfig":"18"},{"size":473,"mtime":1649257473604,"results":"19","hashOfConfig":"18"},{"size":3170,"mtime":1649389951884,"results":"20","hashOfConfig":"18"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"frpm9s",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"jjyh7n",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/mnt/c/apln/git-local/React/my-app/src/index.js",[],[],"/mnt/c/apln/git-local/React/my-app/src/reportWebVitals.js",[],[],"/mnt/c/apln/git-local/React/my-app/src/App.js",[],[],"/mnt/c/apln/git-local/React/my-app/src/myfiles/Janken.js",[],[],"/mnt/c/apln/git-local/React/my-app/src/myfiles/tutorial.js",["53","54"],[],"/mnt/c/apln/git-local/React/my-app/src/myfiles/top.js",[],[],"/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/index.js",["55"],[],"//import React from 'react';\n//import ReactDOM from 'react-dom';\n//import './index.css';\n\n//自作ファイル(.jsxで作ると便利)\n//importの名前は大文字で始める\n//(※とりあえずimportするだけでrenderされるようにしてる…)\n//import Tick from './myfile/tick';\nimport YourStatus from './myfile/yourStatus';\n\n//\"type is invalid\"のエラーは無視して良い(jsxをreturnするためにimportしてるわけじゃないので)\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\n//reportWebVitals();",["56","57"],"/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/myfile/tick.jsx",["58"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nfunction tick() {\r\n  let element = (\r\n    <div>\r\n      <h2>It is {new Date().toLocaleTimeString()} now!!!!!!!</h2>\r\n      <br />\r\n    </div>\r\n  );\r\n  //後のために、ここで直接ReactDOM.render使うことにする\r\n  ReactDOM.render(\r\n    element,\r\n    document.getElementById('root')\r\n  );\r\n  return null;\r\n}\r\n\r\nsetInterval(tick, 100);\r\n\r\n//とりあえずnullにしておく\r\nexport default null;\r\n",["59","60"],"/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/myfile/yourStatus.jsx",["61"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//liの初期化。liには各ステータスの星の個数(整数値)が格納される\r\n//map()によりkeyをリストの要素番号にしてる\r\nlet li = [0];\r\n\r\nfunction buttonClicked(d,key){\r\n  if(d === \"buttom\"){\r\n    li.push(0);\r\n  }else if(d === \"top\"){\r\n    li.pop();\r\n  }else if(d === \"right\"){\r\n    li[key] += 1;\r\n  }else if(d === \"left\"){\r\n    if(li[key] > 0){\r\n      li[key] -= 1;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction OneStatus(props){\r\n  const stars = (n) =>{\r\n    if(n > 0){\r\n      return \"★\"+stars(n-1);\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <tr>\r\n      <td><button onClick={() => buttonClicked(\"left\",props.myKey)}>←</button ></td>\r\n      <td><button onClick={() => buttonClicked(\"right\",props.myKey)}>→</button ></td>\r\n      <td><input id={\"statusName_\"+props.myKey} type=\"text\" /></td>\r\n      <td><label id={\"statusN_\"+props.myKey}>{stars(props.n)}</label></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction myForm() {\r\n  let element = (\r\n    <div>\r\n      <div>\r\n        <h2>入力フォーム</h2>\r\n        <p>ステータス名を入力して強さ(星)を「←」「→」で選んでね<br/>「↑」「↓」で新しいステータスを追加・削除できるよ</p>\r\n        <p>\r\n          <label>おなまえ: </label><input id=\"name\" type=\"text\"/>\r\n        </p>\r\n        <div>\r\n          <table border=\"0\">\r\n            <tbody>\r\n              {li.map((n,key) => <OneStatus n={n} key={key} myKey={key}/>)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div>\r\n          <table border=\"0\">\r\n            <tbody>\r\n              <tr>\r\n                <td><button onClick={() => buttonClicked(\"top\")}>↑</button></td>\r\n                <td><button onClick={() => buttonClicked(\"buttom\")}>↓</button></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  //func()のelementにある<div id=\"myForm\"></div>にrenderする\r\n  ReactDOM.render(\r\n    element,\r\n    document.getElementById('myForm')\r\n  );\r\n  return null;\r\n}\r\n\r\nfunction myResult(){\r\n  const NameAndStars = (props) => {\r\n    return (\r\n      <tr>\r\n        <td>{document.getElementById(\"statusName_\"+props.myKey).value}</td>\r\n        <td>{document.getElementById(\"statusN_\"+props.myKey).innerHTML}</td>\r\n      </tr>\r\n    );\r\n  }\r\n  let element = (\r\n    <div>\r\n      <h2>あなたのステータス</h2>\r\n      <h3>{document.getElementById(\"name\").value}</h3>\r\n      <table border=\"0\">\r\n        <tbody>\r\n          {li.map((n,key) => <NameAndStars key={key} myKey={key} />)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n  ReactDOM.render(\r\n    element,\r\n    document.getElementById('myResult')\r\n  );\r\n}\r\n\r\nfunction func(){\r\n  let element = (\r\n    <div>\r\n      <div id=\"myForm\"></div>\r\n      <h2>↓↓↓</h2>\r\n      <div id=\"myResult\"></div>\r\n      <br />\r\n    </div>\r\n  );\r\n  //直接ReactDOM.renderを使う\r\n  ReactDOM.render(\r\n    element,\r\n    document.getElementById('root')\r\n  );\r\n  myForm();\r\n  myResult();\r\n}\r\n\r\nsetInterval(func, 50);\r\n\r\n//とりあえずnullにしておく\r\nexport default null;\r\n",{"ruleId":"62","severity":1,"message":"63","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":9,"column":10,"nodeType":"64","messageId":"65","endLine":9,"endColumn":14},{"ruleId":"62","severity":1,"message":"67","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":18},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":22,"column":1,"nodeType":"74","endLine":22,"endColumn":21},{"ruleId":"68","replacedBy":"75"},{"ruleId":"70","replacedBy":"76"},{"ruleId":"72","severity":1,"message":"73","line":125,"column":1,"nodeType":"74","endLine":125,"endColumn":21},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'YourStatus' is defined but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"import/no-anonymous-default-export","Assign literal to a variable before exporting as module default","ExportDefaultDeclaration",["77"],["78"],"no-global-assign","no-unsafe-negation"]