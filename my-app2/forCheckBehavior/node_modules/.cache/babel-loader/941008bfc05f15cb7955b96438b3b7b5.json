{"ast":null,"code":"var _jsxFileName = \"/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/myfile/yourStatus.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //liの初期化。liには各ステータスの星の個数(整数値)が格納される\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet li = [1];\n\nfunction buttonClicked(props) {\n  if (props.d === \"buttom\") {\n    li.push(0);\n  } else if (props.d === \"top\") {\n    li.pop();\n  } else if (props.d === \"right\") {\n    li[li.length - 1] += 1;\n  } else if (props.d === \"left\") {\n    li[li.length - 1] -= 1;\n  }\n}\n\nfunction oneStatus(props) {\n  const stars = n => {\n    if (n > 0) {\n      return \"★\" + stars(n - 1);\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: stars(props.n)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            buttonClicked(\"left\");\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            buttonClicked(\"right\");\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\nfunction func() {\n  let element = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"0\",\n      children: li.map(n => {\n        oneStatus(n);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this); //後のために、ここで直接ReactDOM.render使うことにする\n\n\n  ReactDOM.render(element, document.getElementById('root'));\n  return null;\n}\n\nsetInterval(func, 100); //とりあえずnullにしておく\n\nexport default null;","map":{"version":3,"sources":["/mnt/c/apln/git-local/React/my-app2/forCheckBehavior/src/myfile/yourStatus.jsx"],"names":["React","ReactDOM","li","buttonClicked","props","d","push","pop","length","oneStatus","stars","n","func","element","map","render","document","getElementById","setInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;;AACA,IAAIC,EAAE,GAAG,CAAC,CAAD,CAAT;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAC3B,MAAGA,KAAK,CAACC,CAAN,KAAY,QAAf,EAAwB;AACtBH,IAAAA,EAAE,CAACI,IAAH,CAAQ,CAAR;AACD,GAFD,MAEM,IAAGF,KAAK,CAACC,CAAN,KAAY,KAAf,EAAqB;AACzBH,IAAAA,EAAE,CAACK,GAAH;AACD,GAFK,MAEA,IAAGH,KAAK,CAACC,CAAN,KAAY,OAAf,EAAuB;AAC3BH,IAAAA,EAAE,CAACA,EAAE,CAACM,MAAH,GAAU,CAAX,CAAF,IAAmB,CAAnB;AACD,GAFK,MAEA,IAAGJ,KAAK,CAACC,CAAN,KAAY,MAAf,EAAsB;AAC1BH,IAAAA,EAAE,CAACA,EAAE,CAACM,MAAH,GAAU,CAAX,CAAF,IAAmB,CAAnB;AACD;AACF;;AAED,SAASC,SAAT,CAAmBL,KAAnB,EAAyB;AACvB,QAAMM,KAAK,GAAIC,CAAD,IAAM;AAClB,QAAGA,CAAC,GAAG,CAAP,EAAS;AACP,aAAO,MAAID,KAAK,CAACC,CAAC,GAAC,CAAH,CAAhB;AACD,KAFD,MAEK;AACH,aAAO,EAAP;AACD;AACF,GAND;;AAOA,sBACE;AAAA,4BACE;AAAA,6BAAI;AAAA,+BAAI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAI;AAAA,kBAAKD,KAAK,CAACN,KAAK,CAACO,CAAP;AAAV;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BAAI;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACR,YAAAA,aAAa,CAAC,MAAD,CAAb;AAAsB,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,6BAAI;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACA,YAAAA,aAAa,CAAC,OAAD,CAAb;AAAuB,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,SAASS,IAAT,GAAgB;AACd,MAAIC,OAAO,gBACT;AAAA,2BACE;AAAO,MAAA,MAAM,EAAC,GAAd;AAAA,gBACGX,EAAE,CAACY,GAAH,CAAOH,CAAC,IAAI;AAACF,QAAAA,SAAS,CAACE,CAAD,CAAT;AAAa,OAA1B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CADc,CAQd;;;AACAV,EAAAA,QAAQ,CAACc,MAAT,CACEF,OADF,EAEEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAIA,SAAO,IAAP;AACD;;AAEDC,WAAW,CAACN,IAAD,EAAO,GAAP,CAAX,C,CAEA;;AACA,eAAe,IAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//liの初期化。liには各ステータスの星の個数(整数値)が格納される\r\nlet li = [1];\r\n\r\nfunction buttonClicked(props){\r\n  if(props.d === \"buttom\"){\r\n    li.push(0);\r\n  }else if(props.d === \"top\"){\r\n    li.pop();\r\n  }else if(props.d === \"right\"){\r\n    li[li.length-1] += 1;\r\n  }else if(props.d === \"left\"){\r\n    li[li.length-1] -= 1;\r\n  }\r\n}\r\n\r\nfunction oneStatus(props){\r\n  const stars = (n) =>{\r\n    if(n > 0){\r\n      return \"★\"+stars(n-1);\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <tr>\r\n      <td><h2><input type=\"text\" /></h2></td>\r\n      <td><h2>{stars(props.n)}</h2></td>\r\n      <td><h2><button onClick={() => {buttonClicked(\"left\")}}>←</button ></h2></td>\r\n      <td><h2><button onClick={() => {buttonClicked(\"right\")}}>→</button ></h2></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction func() {\r\n  let element = (\r\n    <div>\r\n      <table border=\"0\">\r\n        {li.map(n => {oneStatus(n)})}\r\n      </table>\r\n    </div>\r\n  );\r\n  //後のために、ここで直接ReactDOM.render使うことにする\r\n  ReactDOM.render(\r\n    element,\r\n    document.getElementById('root')\r\n  );\r\n  return null;\r\n}\r\n\r\nsetInterval(func, 100);\r\n\r\n//とりあえずnullにしておく\r\nexport default null;\r\n"]},"metadata":{},"sourceType":"module"}